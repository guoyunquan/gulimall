<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyq.product.dao.PmsBrandDao">

    <resultMap type="com.gyq.product.entity.PmsBrand" id="PmsBrandMap">
        <result property="brandId" column="brand_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="logo" column="logo" jdbcType="VARCHAR"/>
        <result property="descript" column="descript" jdbcType="VARCHAR"/>
        <result property="showStatus" column="show_status" jdbcType="INTEGER"/>
        <result property="firstLetter" column="first_letter" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="brandId" useGeneratedKeys="true">
        insert into gulimall_pms.pms_brand(name, logo, descript, show_status, first_letter, sort)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.logo}, #{entity.descript}, #{entity.showStatus}, #{entity.firstLetter}, #{entity.sort})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="brandId" useGeneratedKeys="true">
        insert into gulimall_pms.pms_brand(name, logo, descript, show_status, first_letter, sort)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.logo}, #{entity.descript}, #{entity.showStatus}, #{entity.firstLetter},
            #{entity.sort})
        </foreach>
        on duplicate key update
        name = values(name) , logo = values(logo) , descript = values(descript) , show_status = values(show_status) ,
        first_letter = values(first_letter) , sort = values(sort)
    </insert>
    <select id="getList" resultMap="PmsBrandMap" parameterType="com.gyq.product.dto.PmsBrandPageDto">
        select brand_id, name, logo, descript, show_status, first_letter, sort
        from pms_brand
        <where>
            <if test="key != null and key != ''">
                and (lower(first_letter) like concat('%', #{key}, '%') or
                name like concat('%', #{key}, '%'))
            </if>
        </where>
        limit #{offset},#{limit}
    </select>
    <select id="getTotal" parameterType="com.gyq.product.dto.PmsBrandPageDto" resultType="java.lang.Integer">
        select count(brand_id)
        from pms_brand
        <where>
            <if test="key != null and key != ''">
                and (lower(first_letter) like concat('%', #{key}, '%') or
                name like concat('%', #{key}, '%'))
            </if>
        </where>
    </select>
</mapper>

