<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyq.coupon.dao.SmsHomeAdvDao">

    <resultMap type="com.gyq.coupon.entity.SmsHomeAdv" id="SmsHomeAdvMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="clickCount" column="click_count" jdbcType="INTEGER"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
        <result property="note" column="note" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="publisherId" column="publisher_id" jdbcType="INTEGER"/>
        <result property="authId" column="auth_id" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into gulimall_sms.sms_home_adv(name, pic, start_time, end_time, status, click_count, url, note, sort, publisher_id, auth_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.pic}, #{entity.startTime}, #{entity.endTime}, #{entity.status}, #{entity.clickCount}, #{entity.url}, #{entity.note}, #{entity.sort}, #{entity.publisherId}, #{entity.authId})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into gulimall_sms.sms_home_adv(name, pic, start_time, end_time, status, click_count, url, note, sort, publisher_id, auth_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.pic}, #{entity.startTime}, #{entity.endTime}, #{entity.status}, #{entity.clickCount}, #{entity.url}, #{entity.note}, #{entity.sort}, #{entity.publisherId}, #{entity.authId})
        </foreach>
        on duplicate key update
         name = values(name) , pic = values(pic) , start_time = values(start_time) , end_time = values(end_time) , status = values(status) , click_count = values(click_count) , url = values(url) , note = values(note) , sort = values(sort) , publisher_id = values(publisher_id) , auth_id = values(auth_id)     </insert>

</mapper>

