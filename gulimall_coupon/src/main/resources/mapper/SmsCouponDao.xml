<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyq.coupon.dao.SmsCouponDao">

    <resultMap type="com.gyq.coupon.entity.SmsCoupon" id="SmsCouponMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="couponType" column="coupon_type" jdbcType="INTEGER"/>
        <result property="couponImg" column="coupon_img" jdbcType="VARCHAR"/>
        <result property="couponName" column="coupon_name" jdbcType="VARCHAR"/>
        <result property="num" column="num" jdbcType="INTEGER"/>
        <result property="amount" column="amount" jdbcType="NUMERIC"/>
        <result property="perLimit" column="per_limit" jdbcType="INTEGER"/>
        <result property="minPoint" column="min_point" jdbcType="NUMERIC"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="useType" column="use_type" jdbcType="INTEGER"/>
        <result property="note" column="note" jdbcType="VARCHAR"/>
        <result property="publishCount" column="publish_count" jdbcType="INTEGER"/>
        <result property="useCount" column="use_count" jdbcType="INTEGER"/>
        <result property="receiveCount" column="receive_count" jdbcType="INTEGER"/>
        <result property="enableStartTime" column="enable_start_time" jdbcType="TIMESTAMP"/>
        <result property="enableEndTime" column="enable_end_time" jdbcType="TIMESTAMP"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="memberLevel" column="member_level" jdbcType="INTEGER"/>
        <result property="publish" column="publish" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into gulimall_sms.sms_coupon(coupon_type, coupon_img, coupon_name, num, amount, per_limit, min_point, start_time, end_time, use_type, note, publish_count, use_count, receive_count, enable_start_time, enable_end_time, code, member_level, publish)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.couponType}, #{entity.couponImg}, #{entity.couponName}, #{entity.num}, #{entity.amount}, #{entity.perLimit}, #{entity.minPoint}, #{entity.startTime}, #{entity.endTime}, #{entity.useType}, #{entity.note}, #{entity.publishCount}, #{entity.useCount}, #{entity.receiveCount}, #{entity.enableStartTime}, #{entity.enableEndTime}, #{entity.code}, #{entity.memberLevel}, #{entity.publish})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into gulimall_sms.sms_coupon(coupon_type, coupon_img, coupon_name, num, amount, per_limit, min_point, start_time, end_time, use_type, note, publish_count, use_count, receive_count, enable_start_time, enable_end_time, code, member_level, publish)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.couponType}, #{entity.couponImg}, #{entity.couponName}, #{entity.num}, #{entity.amount}, #{entity.perLimit}, #{entity.minPoint}, #{entity.startTime}, #{entity.endTime}, #{entity.useType}, #{entity.note}, #{entity.publishCount}, #{entity.useCount}, #{entity.receiveCount}, #{entity.enableStartTime}, #{entity.enableEndTime}, #{entity.code}, #{entity.memberLevel}, #{entity.publish})
        </foreach>
        on duplicate key update
         coupon_type = values(coupon_type) , coupon_img = values(coupon_img) , coupon_name = values(coupon_name) , num = values(num) , amount = values(amount) , per_limit = values(per_limit) , min_point = values(min_point) , start_time = values(start_time) , end_time = values(end_time) , use_type = values(use_type) , note = values(note) , publish_count = values(publish_count) , use_count = values(use_count) , receive_count = values(receive_count) , enable_start_time = values(enable_start_time) , enable_end_time = values(enable_end_time) , code = values(code) , member_level = values(member_level) , publish = values(publish)     </insert>

</mapper>

